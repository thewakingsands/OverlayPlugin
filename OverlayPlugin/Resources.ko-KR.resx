<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

  <data name="CefInstallerFailed" xml:space="preserve">
    <value>CEF 설치 관리자를 로드할 수 없습니다.</value>
  </data>

  <data name="AssemblyMismatch" xml:space="preserve">
    <value>ACT가 OverlayPlugin 버전({2})과 일치하지 않는 {0} {1}(을/를) 로드하려고 했습니다. 플러그인 로드를 중단합니다. 

이전 OverlayPlugin을 비활성화하고 ACT를 다시 시작하세요. 문제가 해결되지 않았다면 위에서 언급한 파일과 같은 디렉토리에 있는 OverlayPlugin*.dll, CEF 또는 HtmlRenderer.dll 파일을 제거하십시오.
</value>
  </data>

  <data name="AssemblyResolverError" xml:space="preserve">
    <value>AssemblyResolver: 오류 {0}</value>
  </data>

  <data name="FailedToLoadCommon" xml:space="preserve">
    <value>Common을 로드하지 못했습니다!</value>
  </data>

  <data name="InitCef" xml:space="preserve">
    <value>CEF를 초기화 중...</value>
  </data>

  <data name="WaitingForAct" xml:space="preserve">
    <value>ACT 시작을 기다리는 중...</value>
  </data>

  <data name="InitRuntime" xml:space="preserve">
    <value>런타임 초기화 중...</value>
  </data>

  <data name="AssemblyResolverLoaded" xml:space="preserve">
    <value>AssemblyResolver: 로드: {0}</value>
  </data>

  <data name="CoreOrHtmlRendererInsane" xml:space="preserve">
    <value>OverlayPlugin.Core 또는 HtmlRenderer의 버전이 OverlayPlugin 버전과 일치하지 않습니다.</value>
  </data>
  <data name="AssemblyMissing" xml:space="preserve">
    <value>불러오기 실패 {0}: {1}
플러그인 압축 파일 안의 내용물을 빠짐없이 전부 해제했는지, 삭제하진 않았는지 확인하세요. (libs 폴더 등)</value>
  </data>
  <data name="DependencyMissing" xml:space="preserve">
    <value>의존성 불러오기 실패 {0}: {1}
플러그인 압축 파일 안의 내용물을 빠짐없이 전부 해제했는지, 삭제하진 않았는지 확인하세요.</value>
  </data>
  <data name="DependencyOutdated" xml:space="preserve">
    <value>Fatal : 로드된 {0} 버전은 필요한 버전보다 낮은 버전입니다({1}  &lt; {2})! OverlayPlugin과 애드온들에서 이상한 버그가 발생하는 원인이 될 수 있습니다.</value>
  </data>
</root>